// Generated by gencpp from file localizer/Localize.msg
// DO NOT EDIT!


#ifndef LOCALIZER_MESSAGE_LOCALIZE_H
#define LOCALIZER_MESSAGE_LOCALIZE_H

#include <ros/service_traits.h>


#include <localizer/LocalizeRequest.h>
#include <localizer/LocalizeResponse.h>


namespace localizer
{

struct Localize
{

typedef LocalizeRequest Request;
typedef LocalizeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Localize
} // namespace localizer


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::localizer::Localize > {
  static const char* value()
  {
    return "a308643c2731f421c811b956395b3a0b";
  }

  static const char* value(const ::localizer::Localize&) { return value(); }
};

template<>
struct DataType< ::localizer::Localize > {
  static const char* value()
  {
    return "localizer/Localize";
  }

  static const char* value(const ::localizer::Localize&) { return value(); }
};


// service_traits::MD5Sum< ::localizer::LocalizeRequest> should match 
// service_traits::MD5Sum< ::localizer::Localize > 
template<>
struct MD5Sum< ::localizer::LocalizeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::localizer::Localize >::value();
  }
  static const char* value(const ::localizer::LocalizeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::localizer::LocalizeRequest> should match 
// service_traits::DataType< ::localizer::Localize > 
template<>
struct DataType< ::localizer::LocalizeRequest>
{
  static const char* value()
  {
    return DataType< ::localizer::Localize >::value();
  }
  static const char* value(const ::localizer::LocalizeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::localizer::LocalizeResponse> should match 
// service_traits::MD5Sum< ::localizer::Localize > 
template<>
struct MD5Sum< ::localizer::LocalizeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::localizer::Localize >::value();
  }
  static const char* value(const ::localizer::LocalizeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::localizer::LocalizeResponse> should match 
// service_traits::DataType< ::localizer::Localize > 
template<>
struct DataType< ::localizer::LocalizeResponse>
{
  static const char* value()
  {
    return DataType< ::localizer::Localize >::value();
  }
  static const char* value(const ::localizer::LocalizeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LOCALIZER_MESSAGE_LOCALIZE_H
